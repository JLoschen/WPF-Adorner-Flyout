<UserControl x:Class="FlyoutDemo.Flyouts.TopRightCornerFlyout"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:flyoutDemo="clr-namespace:FlyoutDemo"
             xmlns:flyouts="clr-namespace:FlyoutDemo.Flyouts"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <flyouts:LocationToHorizontalAlignmentConverter x:Key="LocationToHorizontalAlignmentConverter"/>
            <flyouts:LocationToVerticalAlignmentConverter x:Key="LocationToVerticalAlignmentConverter"/>
            <!--The 2 styles below are assigned in code behind in event handlers-->
            <Style TargetType="Border" x:Key="OuterBorderStyle">
                <Setter Property="Opacity" Value="0.7"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Border" x:Key="OuterBorderOpaqueStyle">
                <Setter Property="Opacity" Value="1"/>
            </Style>
            <flyoutDemo:BorderClipConverter x:Key="BorderClipConverter"/>
            <Style TargetType="{x:Type Path}" x:Key="ArrowStyle">
                <Setter Property="Data" Value="M0,0 L0,6 L3,3 Z"/>
                <Setter Property="Fill" Value="Black"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="Height" Value="8"/>
                <Setter Property="Width" Value="4"/>
                <Setter Property="Stretch" Value="Fill"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="0" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}"
                                                         Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                 By="180"     
                                                    BeginTime="00:00:00.2"
                                                    Duration="00:00:00.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                    By="-180"
                                                    BeginTime="00:00:00.2"
                                                    Duration="00:00:00.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RenderTransform>
            <TranslateTransform x:Name="FlyOut" Y="{Binding HiddenY}" X="{Binding HiddenX}" />
        </Grid.RenderTransform>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <ToggleButton HorizontalAlignment="{Binding FlyoutPlacement,Converter={StaticResource LocationToHorizontalAlignmentConverter}}"
                      VerticalAlignment="{Binding FlyoutPlacement, Converter={StaticResource LocationToVerticalAlignmentConverter}}"
                      x:Name="arrowToggle" Margin="0,0,1,1" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2">
            <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Background" Value="LightGray" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border Background="{TemplateBinding Background}"  CornerRadius="18" Width="60" Height="36" >
                                    <Border.LayoutTransform>
                                        <!--135-->
                                        <RotateTransform CenterX="0" CenterY="0" Angle="{Binding HandleAngle}"/>
                                    </Border.LayoutTransform>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Path Style="{StaticResource ArrowStyle}" Margin="0,0,10,0" x:Name="arrow" />
                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" Value="#a9abad" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ToggleButton.Style>
            <ToggleButton.Triggers>
                <EventTrigger RoutedEvent="ToggleButton.Checked">
                    <BeginStoryboard>
                        <Storyboard Completed="OnExpanded" >
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FlyOut" Storyboard.TargetProperty="Y">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.40"  Value="{Binding ExpandedY}" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FlyOut" Storyboard.TargetProperty="X">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.40"   Value="{Binding ExpandedX}"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                    <BeginStoryboard>
                        <Storyboard Completed="OnHidden" >
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FlyOut" Storyboard.TargetProperty="Y">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.40"  Value="{Binding HiddenY}" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FlyOut" Storyboard.TargetProperty="X">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.40"  Value="{Binding HiddenX}" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </ToggleButton.Triggers>
        </ToggleButton>
        <Border CornerRadius="0,0,10,0" Padding="5"  Background="LightGray" x:Name="OuterBorder" BorderBrush="Transparent" BorderThickness="1" Grid.Column="1" Grid.Row="0">
            <Border.Clip>
                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                    <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                </MultiBinding>
            </Border.Clip>
            <ContentPresenter  Content="{Binding FlyoutContent}" HorizontalAlignment="Left"  />
        </Border>
    </Grid>
</UserControl>
