<Window x:Class="FlyoutDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FlyoutDemo"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <!--<Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="False">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Rectangle RadiusX="20" RadiusY="30" Grid.RowSpan="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="#872234" Offset="0"/>
                                            <GradientStop Color="#872234" Offset="0.9"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle> 
                            <Border Margin="5" CornerRadius="14,14,4,4">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="#C53550" Offset="0.1"/>
                                            <GradientStop Color="#C43551" Offset="0.5"/>
                                            <GradientStop Color="#C43551" Offset="0.9"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter Grid.RowSpan="2"   
                              x:Name="PrimaryContent"
                              HorizontalAlignment="Center" VerticalAlignment="Center"
                              Margin="{TemplateBinding Padding}" 
                              Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" 
                          />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="gold" />
        </Style>-->
        <Style TargetType="{x:Type Path}" x:Key="ArrowStyle">
            <Setter Property="Data" Value="M0,0 L0,6 L3,3 Z"/>
            <Setter Property="Fill" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="Height" Value="8"/>
            <Setter Property="Width" Value="4"/>
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle="0" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}"
                                                         Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                 By="180"     
                                                BeginTime="00:00:00.2"
                                                Duration="00:00:00.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                    By="-180"
                                                    BeginTime="00:00:00.2"
                                                    Duration="00:00:00.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    <!--ShowFilter="True"-->
    <!--IsFlyoutVisible="True"-->
    <local:FlyOutAdornerGrid IsFlyoutVisible="{Binding ShowAdorner}"  FlyoutPlacement="{Binding FlyoutLocation}">
        <local:FlyOutAdornerGrid.FlyoutContent>
            <!--<StackPanel>
                <Label Content="Set in View!"/>
            </StackPanel>-->
            <Grid Height="70" Width="150" Background="Purple">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="65"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--<TextBlock Text="Test Content!"/>-->
                <Border Background="Aqua" Grid.Column="0" Grid.ColumnSpan="2"/>
                <Button Content="Test Button" Command="{Binding TestCommand}" Grid.Row="1" Grid.Column="0"/>
                <CheckBox Content="Do Stuff?" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom"/>
                <TextBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"/>
            </Grid>
        </local:FlyOutAdornerGrid.FlyoutContent>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Background="Blue" Grid.Row="0" Grid.Column="0"/>
        <Border Background="Red" Grid.Row="0" Grid.Column="1"/>
        <Border Background="Orange" Grid.Row="1" Grid.Column="0">
            <CheckBox Content="Show Adorner" IsChecked="{Binding ShowAdorner}"/>
        </Border>
        <Border Background="Purple" Grid.Row="1" Grid.Column="1">
            <StackPanel>
                <RadioButton GroupName="Location" Content="Top Left" IsChecked="{Binding IsTopLeft}"/>
                <RadioButton GroupName="Location" Content="Top" IsChecked="{Binding IsTop}"/>
                <RadioButton GroupName="Location" Content="Top Right" IsChecked="{Binding IsTopRight}"/>
                <RadioButton GroupName="Location" Content="Right" IsChecked="{Binding IsRight}"/>
                <RadioButton GroupName="Location" Content="Bottom Right" IsChecked="{Binding IsBottomRight}"/>
                <RadioButton GroupName="Location" Content="Bottom" IsChecked="{Binding IsBottom}"/>
                <RadioButton GroupName="Location" Content="Bottom Left" IsChecked="{Binding IsBottomLeft}"/>
                <RadioButton GroupName="Location" Content="Left" IsChecked="{Binding IsLeft}"/>
            </StackPanel>
            <!--<Button Content="TestButton"/>-->

            <!--<Rectangle RadiusX="20" RadiusY="20" Height="40">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="LightGray" Offset="0"/>
                            <GradientStop Color="LightGray" Offset="0.9"/>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Rectangle.Fill>
                <TextBlock Text="Test Text"/>
            </Rectangle>-->
            <!--<Border Background="LightGray" Height="40" CornerRadius="20" Width="60" >
                <Border.RenderTransform>
                    <RotateTransform CenterX="0" CenterY="0" Angle="45"></RotateTransform>
                </Border.RenderTransform>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Path Style="{StaticResource ArrowStyle}" Margin="0,0,10,0"/>
                </StackPanel>
            </Border>-->
        </Border>
    </local:FlyOutAdornerGrid>
</Window>
